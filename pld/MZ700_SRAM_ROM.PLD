/* MZ700 SRAM - ROM */

Name     MZ700_SRAM_ROM ;
PartNo   00 ;
Date     05/17/2024 ;
Revision 03 ;
Designer T.Schembri ;
Company  TBC ;
Assembly None ;
Location Chicago,IL;
Device   f1502ispplcc44;

/* Inputs */

PIN 4		= A0;
PIN 5		= A1;
PIN 6		= A2;
PIN 34		= A3;
PIN 36		= A4;
PIN 37		= A5;
PIN 43		= A6;
PIN 2		= A7;
PIN 8		= A8;
PIN 9		= A9;
PIN 12		= A10;
PIN 14		= A11;
PIN 16		= A12;
PIN 17		= A13;
PIN 18		= A14;
PIN 19		= A15;
PIN 20		= D0;
PIN 21		= D1;
PIN 24		= D2;
PIN 26		= D3;
PIN 27		= !MREQ;
PIN 28		= !REG_SEL;
PIN 1		= !RESET;
PIN 41		= !IORQ;
PIN 44		= !M1;
PIN 25		= !WR;

FIELD REG_NUMBER = [A0..A2];
FIELD IO_ADDR = [A0..A7];
FIELD MEM_ADDR = [A0..A15];


/* Outputs */

PIN 29		= RA0;
PIN 31		= RA1;
PIN 33		= !MMU_WR;
PIN 39		= !ROM_CS;
PIN 40		= !RAM_CS;
PIN 11		= BOARD_ENABLED_LED;

/* EQUATIONS */

IOWR = !M1 & IORQ & WR;

/* DRAM flip flop. 1 = $D000->$FFFF is DRAM (selected with OUT ($E1),A) */
/*                 0 = $D000->$FFFF is VRAM/MMIO (selected with OUT ($E3),A or OUT ($E4),A or RESET) */

NODE DRAM_FF;
DRAM_FF.AR = IOWR & ( IO_ADDR:E3 # IO_ADDR:E4 );
DRAM_FF.AP = IOWR & IO_ADDR:E1;
DRAM_FF.D = 'b'0;
DRAM_FF.CK = RESET;

/* Lock flip flop. 1 = $D000->$FFFF not accessible (locked) (selected with OUT ($E5),A) */
/*                 0 = $D000->$FFFF is unlocked, go back to the previous state (selected with OUT ($E6),A) */

NODE LOCK_FF;
LOCK_FF.AR = IOWR & ( IO_ADDR:E6 # IO_ADDR:E4 );
LOCK_FF.AP = IOWR & IO_ADDR:E5;
LOCK_FF.D = 'b'0;
LOCK_FF.CK = RESET;

/* board enabled: true if !DRAM_FF and !LOCK_FF and DISABLE_FF */

NODE DISABLE_FF;
DISABLE_FF.AR = RESET;
DISABLE_FF.D  = D0;
DISABLE_FF.CK = REG_SEL & REG_NUMBER:5;


BOARD_ENABLED = !DRAM_FF & !LOCK_FF & !DISABLE_FF;


/* mmu register write */

MMU_WR = REG_SEL & REG_NUMBER:[0..3];

/* memory page type flip flops (0 : ROM, 1: RAM) */

FF_REG = REG_SEL & REG_NUMBER:4;

NODE EN_E100_FF;
EN_E100_FF.D	= D0;
EN_E100_FF.AR	= RESET;
EN_E100_FF.CK = FF_REG;

NODE EN_E800_FF;
EN_E800_FF.D	= D1;
EN_E800_FF.AR	= RESET;
EN_E800_FF.CK = FF_REG;

NODE EN_F000_FF;
EN_F000_FF.D	= D2;
EN_F000_FF.AR	= RESET;
EN_F000_FF.CK = FF_REG;

NODE EN_F800_FF;
EN_F800_FF.D	= D3;
EN_F800_FF.AR	= RESET;
EN_F800_FF.CK = FF_REG;

/* page select */

E100_PAGE_CS = MREQ & MEM_ADDR:[E100..E7FF];
E800_PAGE_CS = MREQ & MEM_ADDR:[E800..EFFF];
F000_PAGE_CS = MREQ & MEM_ADDR:[F000..F7FF];
F800_PAGE_CS = MREQ & MEM_ADDR:[F800..FFFF];

RAM_CS = BOARD_ENABLED & (( E100_PAGE_CS & EN_E100_FF ) # ( E800_PAGE_CS & EN_E800_FF ) # ( F000_PAGE_CS & EN_F000_FF ) # ( F800_PAGE_CS & EN_F800_FF ));
ROM_CS = BOARD_ENABLED & (( E100_PAGE_CS & !EN_E100_FF ) # ( E800_PAGE_CS & !EN_E800_FF ) # ( F000_PAGE_CS & !EN_F000_FF ) # ( F800_PAGE_CS & !EN_F800_FF ));

RA0 = F800_PAGE_CS # E800_PAGE_CS;
RA1 = F800_PAGE_CS # F000_PAGE_CS;

/* LED */

BOARD_ENABLED_LED = BOARD_ENABLED;
